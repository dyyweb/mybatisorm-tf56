package ${serviceImplPackage} ;

import ${pojoPackage}.${bigDoName};
import ${daoPackage}.${bigDaoName};
import ${servicePackage}.${bigServiceName};
import java.util.List;
import lombok.extern.slf4j.Slf4j;
import org.springframework.util.Assert;
import tf56.spider.base.ResultModel;
import com.alibaba.dubbo.config.annotation.Service;
import javax.annotation.Resource;


/**
* author: dy
* JDK-version:  JDK1.8
* comments:  ${headName}服务实现层
* since Date： ${date}
*/
@Service
@Slf4j
public class ${bigServiceImplName} implements ${bigServiceName}{

    @Resource
    private ${bigDaoName} ${minDaoName};


    /**
    * 多条件查询(分页)
    * @param ${minDoName}
    * @return ResultModel
    */
    @Override
   public ResultModel<List<${bigDoName}>> select${bigDoName}ListForPage(${bigDoName} ${minDoName}) throws Exception{
        try {

            Assert.notNull(${minDoName}, "分页参数不能为空");
            Assert.notNull(${minDoName}, "传入参数不能为空");
        
            List<${bigDoName}> list = ${minDaoName}.selectListByParams(${minDoName});
            if (list == null || list.isEmpty())
               return new ResultModel<List<${bigDoName}>>(ResultModel.RESULT_ERROR,"查询结果为空",list.size(),list,null);
            else
                return new ResultModel<List<${bigDoName}>>(ResultModel.RESULT_SUCCESS,"查询成功",list.size(),list,null);
        } catch (IllegalArgumentException e) {
            log.error("多条件查询${bigDoName}校验参数异常!",e);
           return new ResultModel<List<${bigDoName}>>(ResultModel.RESULT_ERROR,"查询参数异常",-1,null,e.getMessage());
        } catch (Exception e) {
            log.error("多条件查询${bigDoName}信息异常!", e);
            return new ResultModel<List<${bigDoName}>>(ResultModel.RESULT_ERROR,"查询异常",-1,null,e.getMessage());
        }
    }

    /**
    * 根据参数查询
    * @param ${minDoName}
    * @return ResultModel
    */
    @Override
  public  ResultModel<${bigDoName}> selectByParams(${bigDoName} ${minDoName}){
        try {
            Assert.notNull( ${minDoName},"查询Id不能为空!");
            ${bigDoName} ${minDoName}_exist = ${minDaoName}.selectByParams(${minDoName});
            if (${minDoName}_exist == null)
               return new ResultModel<${bigDoName}>(ResultModel.RESULT_ERROR,"查询结果为空",-1,${minDoName}_exist,null);
            else
                return new ResultModel<${bigDoName}>(ResultModel.RESULT_SUCCESS,"查询成功",1,${minDoName}_exist,null);
        } catch (Exception e) {
           log.error(e.getMessage(),e);
            return new ResultModel<${bigDoName}>(ResultModel.RESULT_ERROR,"查询异常",-1,null,e.getMessage());
        }
    }

    /**
    * 添加
    * @param ${minDoName}
    * @return ResultModel
    */
    @Override
  public  ResultModel<Integer>  create${bigDoName}(${bigDoName} ${minDoName}){
        try {
            // Validate
    
            // Insert
            int num = ${minDaoName}.insert(${minDoName});
            if (num < 1) {
                throw new Exception("sql插入数据为0,请检查各项参数!");
            }
            log.info("新增ID=>[" + ${minDoName}.getId() + "]的${bigDoName}成功");
           return new ResultModel<Integer>(ResultModel.RESULT_SUCCESS,"插入成功",-1,num,null);
        }catch (Exception e) {
           log.error("新增ID=>[" +1 + "]的ClearJour失败");
            return new ResultModel<Integer>(ResultModel.RESULT_ERROR,e.getMessage(),-1,null,null);
        }
    }


    /**
    * 修改
    * @param ${minDoName}
    * @return ResultModel
    */
    @Override
   public ResultModel<Integer> update${bigDoName}(${bigDoName} ${minDoName}){
        try {

            // validate

            // Update
            int num = ${minDaoName}.updateById(${minDoName});
            if (num < 1) {
                throw new Exception("sql修改数据为0,请检查各项参数!");
            }
            log.info("修改ID=>[" + ${minDoName}.getId() + "]的${bigDoName}成功!");
           return new ResultModel<Integer>(ResultModel.RESULT_SUCCESS,"修改成功",-1,0,null);
        } catch (Exception e) {
            log.error("修改ID=>[" + ${minDoName}.getId() + "]的${bigDoName}信息异常",e);
           return new ResultModel<Integer>(ResultModel.RESULT_ERROR,e.getMessage(),-1,0,null);
        }
    }


}
